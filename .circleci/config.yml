version: 2.1
executors:
  my-executor:
    docker:
      - image: cimg/node:14.5
    working_directory: ~/ci_app

orbs:
  sfdx: circleci/salesforce-sfdx@2.1
  codecov: codecov/codecov@1.1.3

jobs:
  static-analysis: 
    docker:
      - image: circleci/openjdk:latest
    steps:
      - checkout
      - restore_cache:
          keys:
            - pmd-v6.30.0
      - run:
          name: Install PMD
          command: |
              if [ ! -d pmd-bin-6.30.0 ]; then
                  curl -L "https://github.com/pmd/pmd/releases/download/pmd_releases/6.30.0/pmd-bin-6.30.0.zip" -o pmd-bin-6.30.0.zip
                  unzip pmd-bin-6.30.0.zip
                  rm pmd-bin-6.30.0.zip
              fi
      - save_cache:
          key: pmd-v6.30.0
          paths:
            - pmd-bin-6.30.0
      - run:
          name: Run Static Analysis Infos
          command: |
              pmd-bin-6.30.0/bin/run.sh pmd -d . -R apex-ruleset.xml -f html -r static-analysis-Infos.html -no-cache -failOnViolation false
      - store_artifacts:
          path: static-analysis-Infos.html
      - run:
          name: Run Static Analysis Errors
          command: |
              pmd-bin-6.30.0/bin/run.sh pmd -d . -R apex-ruleset.xml -f html -r static-analysis-Errors.html -no-cache -failOnViolation true -min 2
      - store_artifacts:
          path: static-analysis-Errors.html
  formatting-and-linting-test-coverage:
    executor: my-executor
    steps:
      - checkout
      - run:
          # Install npm dependencies for Prettier and Jest
          - name: 'Install npm dependencies'
            command: npm ci
      - run:
          # Prettier formatting
          - name: 'Code formatting verification with Prettier'
            command: npm run prettier:verify
      - run:
          # Lint LWC
          - name: 'Lint Lightning Web Components'
            command: npm run lint:lwc
      - run:
          # Lint Aura
          - name: 'Lint Aura components'
            command: 'npm run lint:aura'
      - run:
          # LWC unit tests
          - name: 'Unit test Lightning Web Components'
            command: npm run test:unit:coverage
      - codecov/upload:
          #file: ./tests/apex/test-result-codecoverage.json
          flags: LWC
  TestCoverageUAT:
    executor: my-executor
    steps:
      - sfdx/install
      - checkout
      - run:
          name: Auth UAT
          command: . ~/ci_app/ciScripts/authUAT.sh
      - run:
          name: UAT Coverage
          command: |
            sfdx force:apex:test:run -c -r human -w 20 -d ./tests/apex -u uat
      - codecov/upload:
          file: ./tests/apex/test-result-codecoverage.json
          flags: Apex
  TestDeployShared:
    executor: my-executor
    steps:
      - sfdx/install
      - checkout
      - run:
          name: Auth Shared
          command: . ~/ci_app/ciScripts/authShared.sh
      - run:
          name: Test Shared Deployment
          command: |
            sfdx force:source:deploy -p force-app -u shared -l RunLocalTests -w 33 --loglevel info --checkonly
  DeployToShared:
    executor: my-executor
    steps:
      - sfdx/install
      - checkout
      - run:
          name: Auth Shared
          command: . ~/ci_app/ciScripts/authShared.sh
      - run:
          name: Shared Deployment
          command: |
            sfdx force:source:deploy -p force-app -u shared -l RunLocalTests -w 33 --loglevel info
  TestDeployUAT:
    executor: my-executor
    steps:
      - sfdx/install
      - checkout
      - run:
          name: Auth UAT
          command: . ~/ci_app/ciScripts/authUAT.sh
      - run:
          name: Test UAT Deployment
          command: |
            sfdx force:source:deploy -p force-app -u uat -l RunLocalTests -w 33 --loglevel info --checkonly
  DeployToUAT:
    executor: my-executor
    steps:
      - sfdx/install
      - checkout
      - run:
          name: Auth UAT
          command: . ~/ci_app/ciScripts/authUAT.sh
      - run:
          name: UAT Deployment
          command: |
            sfdx force:source:deploy -p force-app -u uat -l RunLocalTests -w 33 --loglevel info
  TestDeployProd:
    executor: my-executor
    steps:
      - sfdx/install
      - checkout
      - run:
          name: Auth Prod
          command: . ~/ci_app/ciScripts/authProd.sh
      - run:
          name: Test Production Deployment
          command: |
            sfdx force:source:deploy -p force-app -u prod -l RunLocalTests -w 33 --loglevel info --checkonly
  DeployToProd:
    executor: my-executor
    steps:
      - sfdx/install
      - checkout
      - run:
          name: Auth Prod
          command: . ~/ci_app/ciScripts/authProd.sh
      - run:
          name: Production Deployment
          command: |
            sfdx force:source:deploy -p force-app -u prod -l RunLocalTests -w 33 --loglevel info
workflows:
  Tests:
    jobs:
      - static-analysis
      - TestDeployUAT:
          name: Test Deployment to UAT
          filters:
            branches:
              only:
                - /^(?i)Feature.*/
                - /^(?i)Hotfix.*/
      - TestDeployProd:
          name: Test Deployment to Prod
          filters:
            branches:
              only:
                - /^(?i)Deploy-Prod.*/
                - /^(?i)Prod-Deploy.*/
                - /^(?i)Release.*/
                - /^(?i)Hotfix.*/
  Deploys:
    jobs:
      - DeployToUAT:
          name: Deployment to UAT
          filters:
            branches:
              only:
                - /^(?i)master/
                - /^(?i)Dev/
                - /^(?i)Development/
      - TestCoverageUAT:
          name: Test Coverage UAT
          requires:
            - Deployment to UAT
      - DeployToProd:
          name: Deployment to Production
          filters:
            branches:
              only:
                - /^(?i)Prod/
